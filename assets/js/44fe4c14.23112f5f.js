"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[7292],{15680:(e,t,r)=>{r.r(t),r.d(t,{MDXContext:()=>p,MDXProvider:()=>m,mdx:()=>f,useMDXComponents:()=>u,withMDXComponents:()=>l});var n=r(96540);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(){return s=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var n in r)Object.prototype.hasOwnProperty.call(r,n)&&(e[n]=r[n])}return e},s.apply(this,arguments)}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=n.createContext({}),l=function(e){return function(t){var r=u(t.components);return n.createElement(e,s({},t,{components:r}))}},u=function(e){var t=n.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},y=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,s=e.originalType,a=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(r),m=o,y=l["".concat(a,".").concat(m)]||l[m]||d[m]||s;return r?n.createElement(y,i(i({ref:t},p),{},{components:r})):n.createElement(y,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=r.length,a=new Array(s);a[0]=y;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var p=2;p<s;p++)a[p]=r[p];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}y.displayName="MDXCreateElement"},42591:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>p,default:()=>f,frontMatter:()=>c,metadata:()=>l,toc:()=>m});var n,o=r(9668),s=r(21367),a=(r(96540),r(15680)),i=["components"],c={id:"static-analysis-post-processor",title:"Static Analysis Post Processor",sidebar_label:"Static Analysis Processor"},p=void 0,l={unversionedId:"static-analysis-post-processor",id:"static-analysis-post-processor",title:"Static Analysis Post Processor",description:"The pyre analyze command runs static analysis and outputs the result as JSON.",source:"@site/docs/static_analysis_post_processor.md",sourceDirName:".",slug:"/static-analysis-post-processor",permalink:"/docs/static-analysis-post-processor",draft:!1,editUrl:"https://github.com/facebook/pyre-check/tree/main/documentation/website/docs/static_analysis_post_processor.md",tags:[],version:"current",frontMatter:{id:"static-analysis-post-processor",title:"Static Analysis Post Processor",sidebar_label:"Static Analysis Processor"},sidebar:"pysa",previous:{title:"General Tips",permalink:"/docs/pysa-tips"},next:{title:"Overview",permalink:"/docs/warning_codes/overview-public"}},u={},m=[],d=(n="Internal",function(e){return console.warn("Component "+n+" was not imported, exported, or provided by MDXProvider as global scope"),(0,a.mdx)("div",e)}),y={toc:m};function f(e){var t=e.components,r=(0,s.A)(e,i);return(0,a.mdx)("wrapper",(0,o.A)({},y,r,{components:t,mdxType:"MDXLayout"}),(0,a.mdx)("p",null,"The ",(0,a.mdx)("inlineCode",{parentName:"p"},"pyre analyze")," command runs static analysis and outputs the result as JSON.\nThe Static Analysis Post Processor (SAPP) tool can process these results and\nallows the user to explore the results. Documentation for SAPP is available ",(0,a.mdx)("a",{parentName:"p",href:"https://github.com/facebook/sapp#readme"},"here"),"."),(0,a.mdx)(d,{mdxType:"Internal"}))}f.isMDXComponent=!0}}]);