@generated
{
  "kind": "issue",
  "data": {
    "callable": "add_feature_to_argument.test_add_feature_in_comprehension",
    "callable_line": 38,
    "code": 5002,
    "line": 41,
    "start": 15,
    "end": 19,
    "filename": "add_feature_to_argument.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 39,
              "start": 15,
              "end": 29
            },
            "leaves": [ { "kind": "Test", "name": "_test_source" } ],
            "features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "string_concat_lhs" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 41,
              "start": 15,
              "end": 19
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "string_concat_lhs" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable":
      "add_feature_to_argument.test_add_feature_to_sink_in_comprehension",
    "sinks": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 45,
              "start": 54,
              "end": 63
            },
            "leaves": [
              {
                "kind": "AddFeatureToArgument",
                "name": "add_feature_to_argument.add_feature_to_first"
              }
            ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          },
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 46,
              "start": 15,
              "end": 24
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-via": "string_concat_lhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.add_feature_to_first",
    "sinks": [
      {
        "port": "formal(first)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "AddFeatureToArgument" } ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.add_via_value_of",
    "sinks": [
      {
        "port": "formal(first)",
        "taint": [
          { "decl": null, "leaves": [ { "kind": "AddFeatureToArgument" } ] }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.adds_and_taints",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 14,
              "start": 8,
              "end": 22
            },
            "leaves": [ { "kind": "Test", "name": "_test_source" } ],
            "features": [
              { "always-via": "string_concat_lhs" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.propagate_add_feature",
    "sinks": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 20,
              "start": 32,
              "end": 41
            },
            "leaves": [
              {
                "kind": "AddFeatureToArgument",
                "name": "add_feature_to_argument.add_feature_to_first"
              }
            ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.test_add_feature_to_sink",
    "sinks": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 34,
              "start": 25,
              "end": 34
            },
            "leaves": [
              {
                "kind": "AddFeatureToArgument",
                "name": "add_feature_to_argument.add_feature_to_first"
              }
            ],
            "features": [ { "always-via": "string_concat_lhs" } ]
          },
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 35,
              "start": 15,
              "end": 24
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-via": "string_concat_lhs" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.test_add_via_value_of_second",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 28,
              "start": 8,
              "end": 22
            },
            "leaves": [ { "kind": "Test", "name": "_test_source" } ],
            "features": [
              { "always-via-value": "second" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ]
  }
}
