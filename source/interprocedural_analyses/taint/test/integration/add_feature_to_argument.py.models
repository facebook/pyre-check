@generated
{
  "kind": "issue",
  "data": {
    "callable": "add_feature_to_argument.test_add_feature_in_comprehension",
    "callable_line": 44,
    "code": 5002,
    "line": 47,
    "start": 15,
    "end": 19,
    "filename": "add_feature_to_argument.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "has": "first-index" },
              { "first-index": "<numeric>" },
              { "always-via": "string_concat_lhs" }
            ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 45,
              "start": 15,
              "end": 29
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 47,
              "start": 15,
              "end": 19
            }
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<numeric>" },
      { "always-via": "string_concat_lhs" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "add_feature_to_argument.test_add_feature_in_comprehension:5002:0:Call|_test_sink|0|formal(arg):e660dc46ee53a95cdb86c321f40be0a3"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable":
      "add_feature_to_argument.test_add_feature_to_sink_in_comprehension",
    "sinks": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "string_concat_lhs" } ],
                "leaves": [
                  { "name": "add_feature_to_argument.add_feature_to_first" }
                ],
                "kind": "AddFeatureToArgument"
              }
            ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 51,
              "start": 54,
              "end": 63
            }
          },
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "string_concat_lhs" } ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 52,
              "start": 15,
              "end": 24
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.add_feature_to_first",
    "sinks": [
      {
        "port": "formal(first)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "string_concat_lhs" } ],
                "kind": "AddFeatureToArgument"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.add_via_value_of",
    "sinks": [
      {
        "port": "formal(first)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter":
                      "PositionalParameter {position = 1; name = second; positional_only = false}"
                  }
                ],
                "kind": "AddFeatureToArgument"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.adds_and_taints",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "string_concat_lhs" } ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 14,
              "start": 8,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.dict_test_add_via_value_of_second",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "via-value": "second" } ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 34,
              "start": 8,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.propagate_add_feature",
    "sinks": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "string_concat_lhs" } ],
                "leaves": [
                  { "name": "add_feature_to_argument.add_feature_to_first" }
                ],
                "kind": "AddFeatureToArgument"
              }
            ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 20,
              "start": 32,
              "end": 41
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.test_add_feature_to_sink",
    "sinks": [
      {
        "port": "formal(parameter)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "string_concat_lhs" } ],
                "leaves": [
                  { "name": "add_feature_to_argument.add_feature_to_first" }
                ],
                "kind": "AddFeatureToArgument"
              }
            ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 40,
              "start": 25,
              "end": 34
            }
          },
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "string_concat_lhs" } ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 41,
              "start": 15,
              "end": 24
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "add_feature_to_argument.test_add_via_value_of_second",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via-value": "second" } ],
            "root": {
              "filename": "add_feature_to_argument.py",
              "line": 28,
              "start": 8,
              "end": 22
            }
          }
        ]
      }
    ]
  }
}
