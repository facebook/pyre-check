@generated
Call dependencies
{
  "closure.$toplevel (fun)": [
    "object.__new__ (method)", "typing.GenericMeta.__getitem__ (method)",
    "typing.ParamSpec.__init__ (method)"
  ],
  "closure.async_nonlocal_closure_tito_ignore_decorator (fun)": [
    "_test_sink (fun)", "_test_source (fun)",
    "closure.async_tito (fun)[formal(function, position=0)=closure.async_nonlocal_closure_tito_ignore_decorator.inner (fun)]"
  ],
  "closure.async_nonlocal_closure_tito_with_decorator (fun)": [
    "_test_sink (fun)", "_test_source (fun)",
    "closure.async_tito (fun)[formal(function, position=0)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]",
    "closure.async_tito (fun)[formal(function, position=0)=closure.decorator.wrapper (fun)[local($parameter$function)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]]"
  ],
  "closure.async_nonlocal_closure_tito_with_decorator.inner@decorated (fun)": [
    "closure.decorator (fun)[formal(function, position=0)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]"
  ],
  "closure.async_tito (fun)[formal(function, position=0)=closure.async_nonlocal_closure_tito_ignore_decorator.inner (fun)]": [
    "closure.async_nonlocal_closure_tito_ignore_decorator.inner (fun)"
  ],
  "closure.async_tito (fun)[formal(function, position=0)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]": [
    "closure.async_nonlocal_closure_tito_with_decorator.inner (fun)"
  ],
  "closure.async_tito (fun)[formal(function, position=0)=closure.decorator.wrapper (fun)[local($parameter$function)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]]": [
    "closure.decorator.wrapper (fun)[local($parameter$function)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]"
  ],
  "closure.closure (fun)": [
    "object.__init__ (method)", "object.__new__ (method)"
  ],
  "closure.closure.sink (fun)": [ "_test_sink (fun)" ],
  "closure.closure.source (fun)": [ "_test_source (fun)" ],
  "closure.closure_flow (fun)": [ "closure.closure (fun)" ],
  "closure.closure_no_flow (fun)": [ "closure.closure (fun)" ],
  "closure.decorator.wrapper (fun)[local($parameter$function)=closure.async_nonlocal_closure_tito_with_decorator.inner (fun)]": [
    "closure.async_nonlocal_closure_tito_with_decorator.inner (fun)"
  ],
  "closure.higher_order_function (fun)[formal(f, position=0)=closure.wrapper_for_taint_propagation_hof.inner (fun)]": [
    "closure.wrapper_for_taint_propagation_hof.inner (fun)"
  ],
  "closure.nonlocal_closure_conditional_write (fun)": [
    "_test_sink (fun)", "_test_source (fun)",
    "closure.nonlocal_closure_conditional_write.clear (fun)",
    "closure.nonlocal_closure_conditional_write.conditional_write (fun)"
  ],
  "closure.nonlocal_closure_conditional_write.conditional_write (fun)": [
    "closure._test_source2 (fun)"
  ],
  "closure.nonlocal_closure_define_before_variable_initialization (fun)": [
    "_test_source (fun)",
    "closure.nonlocal_closure_define_before_variable_initialization.read (fun)"
  ],
  "closure.nonlocal_closure_define_before_variable_initialization.read (fun)": [
    "_test_sink (fun)"
  ],
  "closure.nonlocal_closure_flow (fun)": [
    "closure.nonlocal_closure_flow.sink (fun)",
    "closure.nonlocal_closure_flow.source (fun)"
  ],
  "closure.nonlocal_closure_flow.sink (fun)": [ "_test_sink (fun)" ],
  "closure.nonlocal_closure_flow.source (fun)": [ "_test_source (fun)" ],
  "closure.nonlocal_closure_inner_flow (fun)": [
    "closure.nonlocal_closure_inner_flow.flow (fun)"
  ],
  "closure.nonlocal_closure_inner_flow.flow (fun)": [
    "_test_sink (fun)", "_test_source (fun)"
  ],
  "closure.nonlocal_closure_multiple_reads (fun)": [
    "_test_source (fun)",
    "closure.nonlocal_closure_multiple_reads.conditional_read (fun)",
    "closure.nonlocal_closure_multiple_reads.overread (fun)"
  ],
  "closure.nonlocal_closure_multiple_reads.conditional_read (fun)": [
    "_test_sink (fun)"
  ],
  "closure.nonlocal_closure_multiple_reads.overread (fun)": [
    "_test_sink (fun)"
  ],
  "closure.nonlocal_closure_multiple_writes (fun)": [
    "_test_sink (fun)",
    "closure.nonlocal_closure_multiple_writes.conditional_write (fun)",
    "closure.nonlocal_closure_multiple_writes.overwrite (fun)"
  ],
  "closure.nonlocal_closure_multiple_writes.conditional_write (fun)": [
    "_test_source (fun)"
  ],
  "closure.nonlocal_closure_multiple_writes.overwrite (fun)": [
    "_test_source (fun)"
  ],
  "closure.nonlocal_closure_nested_flow (fun)": [
    "_test_sink (fun)", "closure.nonlocal_closure_nested_flow.source1 (fun)"
  ],
  "closure.nonlocal_closure_nested_flow.source1 (fun)": [
    "_test_sink (fun)",
    "closure.nonlocal_closure_nested_flow.source1.source2 (fun)"
  ],
  "closure.nonlocal_closure_nested_flow.source1.source2 (fun)": [
    "_test_sink (fun)",
    "closure.nonlocal_closure_nested_flow.source1.source2.source3 (fun)"
  ],
  "closure.nonlocal_closure_nested_flow.source1.source2.source3 (fun)": [
    "_test_source (fun)"
  ],
  "closure.nonlocal_closure_no_flow (fun)": [
    "closure.nonlocal_closure_no_flow.sink (fun)",
    "closure.nonlocal_closure_no_flow.source (fun)"
  ],
  "closure.nonlocal_closure_no_flow.sink (fun)": [ "_test_sink (fun)" ],
  "closure.nonlocal_closure_no_flow.source (fun)": [ "_test_source (fun)" ],
  "closure.nonlocal_closure_obscure.sink (fun)": [ "_test_sink (fun)" ],
  "closure.nonlocal_closure_obscure.source (fun)": [ "_test_source (fun)" ],
  "closure.nonlocal_closure_read_reduction (fun)": [
    "_test_source (fun)",
    "closure.nonlocal_closure_read_reduction.inner (fun)"
  ],
  "closure.nonlocal_closure_read_reduction.inner (fun)": [
    "_test_sink (fun)"
  ],
  "closure.nonlocal_closure_reduction (fun)": [
    "closure.nonlocal_closure_reduction.sink (fun)",
    "closure.nonlocal_closure_reduction.source (fun)",
    "closure.nonlocal_closure_reduction.tito (fun)"
  ],
  "closure.nonlocal_closure_reduction.sink (fun)": [ "_test_sink (fun)" ],
  "closure.nonlocal_closure_reduction.source (fun)": [ "_test_source (fun)" ],
  "closure.nonlocal_closure_tito (fun)": [
    "_test_sink (fun)", "_test_source (fun)",
    "closure.nonlocal_closure_tito.inner (fun)"
  ],
  "closure.nonlocal_closure_wrapper_flow (fun)": [
    "_test_sink (fun)",
    "closure.nonlocal_closure_wrapper_flow.wrapper (fun)",
    "closure.nonlocal_closure_wrapper_flow.wrapper (fun)[local($local_closure?nonlocal_closure_wrapper_flow$source)=closure.nonlocal_closure_wrapper_flow.source (fun)]"
  ],
  "closure.nonlocal_closure_wrapper_flow.source (fun)": [
    "_test_source (fun)"
  ],
  "closure.nonlocal_closure_wrapper_flow.wrapper (fun)": [
    "closure.nonlocal_closure_wrapper_flow.source (fun)"
  ],
  "closure.nonlocal_closure_wrapper_flow.wrapper (fun)[local($local_closure?nonlocal_closure_wrapper_flow$source)=closure.nonlocal_closure_wrapper_flow.source (fun)]": [
    "closure.nonlocal_closure_wrapper_flow.source (fun)"
  ],
  "closure.nonlocal_closure_write_reduction (fun)": [
    "_test_sink (fun)",
    "closure.nonlocal_closure_write_reduction.source (fun)"
  ],
  "closure.nonlocal_closure_write_reduction.source (fun)": [
    "_test_source (fun)"
  ],
  "closure.nonlocal_obscure_flow (fun)": [
    "closure.nonlocal_closure_obscure (fun)"
  ],
  "closure.nonlocal_obscure_no_flow (fun)": [
    "closure.nonlocal_closure_obscure (fun)"
  ],
  "closure.parameter_order_swap (fun)": [
    "closure.parameter_order_swap.inner (fun)"
  ],
  "closure.parameter_order_swap.inner (fun)": [ "_test_sink (fun)" ],
  "closure.parameter_order_swap_different_variable_names (fun)": [
    "closure.parameter_order_swap_different_variable_names.inner (fun)"
  ],
  "closure.parameter_order_swap_different_variable_names.inner (fun)": [
    "_test_sink (fun)"
  ],
  "closure.parameter_order_swap_tito (fun)": [
    "_test_sink (fun)", "closure.parameter_order_swap_tito.inner (fun)"
  ],
  "closure.taint_propagation (fun)": [
    "_test_source (fun)", "closure.wrapper_for_taint_propagation (fun)"
  ],
  "closure.taint_propagation_hof (fun)": [
    "_test_source (fun)", "closure.wrapper_for_taint_propagation_hof (fun)"
  ],
  "closure.tito_hof (fun)": [ "_test_sink (fun)" ],
  "closure.tito_hof (fun)[formal(f, position=0)=closure.wrapper_for_tito_propagation_hof.inner (fun)]": [
    "_test_sink (fun)",
    "closure.wrapper_for_tito_propagation_hof.inner (fun)"
  ],
  "closure.tito_propagation (fun)": [
    "_test_source (fun)", "closure.wrapper_for_tito_propagation (fun)"
  ],
  "closure.tito_propagation_hof (fun)": [
    "_test_source (fun)", "closure.wrapper_for_tito_propagation_hof (fun)"
  ],
  "closure.wrapper_for_taint_propagation (fun)": [
    "closure.wrapper_for_taint_propagation.inner (fun)"
  ],
  "closure.wrapper_for_taint_propagation.inner (fun)": [ "_test_sink (fun)" ],
  "closure.wrapper_for_taint_propagation_hof (fun)": [
    "closure.higher_order_function (fun)[formal(f, position=0)=closure.wrapper_for_taint_propagation_hof.inner (fun)]"
  ],
  "closure.wrapper_for_taint_propagation_hof.inner (fun)": [
    "_test_sink (fun)"
  ],
  "closure.wrapper_for_tito_propagation (fun)": [
    "_test_sink (fun)", "closure.wrapper_for_tito_propagation.inner (fun)"
  ],
  "closure.wrapper_for_tito_propagation_hof (fun)": [
    "closure.tito_hof (fun)[formal(f, position=0)=closure.wrapper_for_tito_propagation_hof.inner (fun)]"
  ]
}