@generated
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "filename": "builtins.pyi",
    "callable_line": 618,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "filename": "builtins.pyi",
    "callable_line": 619,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_both_generation_parameter_source",
    "callable_line": 162,
    "code": 5002,
    "line": 170,
    "start": 15,
    "end": 31,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 170, "start": 15, "end": 31 },
            "call_site": "170:4-170:32"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_both_generation_parameter_source:5002:0:Call|_test_sink|0|formal(arg):06c974bdf5e63d11e9f5cb9afa0717be"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources",
    "filename": "closure_models.py",
    "callable_line": 166,
    "sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": { "line": 167, "start": 19, "end": 35 },
            "call_site": "167:8-167:36"
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources",
    "callable_line": 166,
    "code": 5002,
    "line": 167,
    "start": 19,
    "end": 35,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources",
                    "port": "leaf:$local_closure_models?captured_variable_model_both_generation_parameter_source$complicated_name"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 166, "start": 4, "end": 4 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 167, "start": 19, "end": 35 },
            "call_site": "167:8-167:36"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_both_generation_parameter_source.model_all_captured_as_generation_and_parameter_sources:5002:0:Call|_test_sink|0|formal(arg):d2b04b745ef41e69315f6f8fe7e57750"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_generation_source",
    "callable_line": 150,
    "code": 5002,
    "line": 159,
    "start": 15,
    "end": 31,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 159, "start": 15, "end": 31 },
            "call_site": "159:4-159:32"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_generation_source:5002:0:Call|_test_sink|0|formal(arg):f44d60bcd0c8096f399c8948f1253f37"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_generation_source.model_all_captured_as_generation_sources",
    "filename": "closure_models.py",
    "callable_line": 154,
    "sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_generation_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_generation_source$complicated_name)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": { "line": 156, "start": 19, "end": 35 },
            "call_site": "156:8-156:36"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources",
    "filename": "closure_models.py",
    "callable_line": 143,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_parameter_source$complicated_name)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": { "line": 144, "start": 19, "end": 35 },
            "call_site": "144:8-144:36"
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_parameter_source$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources",
    "callable_line": 143,
    "code": 5002,
    "line": 144,
    "start": 19,
    "end": 35,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources",
                    "port": "leaf:$local_closure_models?captured_variable_model_parameter_source$complicated_name"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 143, "start": 4, "end": 4 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 144, "start": 19, "end": 35 },
            "call_site": "144:8-144:36"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_parameter_source.model_all_captured_as_parameter_sources:5002:0:Call|_test_sink|0|formal(arg):97a7f2efbf033e21471fcdb353625226"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_sink",
    "callable_line": 173,
    "code": 5002,
    "line": 180,
    "start": 4,
    "end": 33,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 174, "start": 23, "end": 37 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.captured_variable_model_sink.model_all_captured_as_sinks",
                    "port": "leaf:$local_closure_models?captured_variable_model_sink$complicated_name"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 180, "start": 4, "end": 33 }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.captured_variable_model_sink.model_all_captured_as_sinks",
      "index": 0,
      "parameter": "captured_variable($local_closure_models?captured_variable_model_sink$complicated_name)"
    },
    "master_handle": "closure_models.captured_variable_model_sink:5002:0:Call|closure_models.captured_variable_model_sink.model_all_captured_as_sinks|0|captured_variable($local_closure_models?captured_variable_model_sink$complicated_name):0a55479d32e7dd6737f7733fd35dc458"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_sink.model_all_captured_as_sinks",
    "filename": "closure_models.py",
    "callable_line": 177,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_sink$complicated_name)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.captured_variable_model_tito",
    "callable_line": 127,
    "code": 5002,
    "line": 134,
    "start": 15,
    "end": 43,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 134, "start": 15, "end": 43 } ],
            "origin": { "line": 128, "start": 23, "end": 37 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 134, "start": 15, "end": 43 },
            "call_site": "134:4-134:44"
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" },
      { "always-via": "tito" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.captured_variable_model_tito:5002:0:Call|_test_sink|0|formal(arg):6dfda8c196e18ac377d85df77b71b9b8"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.captured_variable_model_tito.model_all_captured_as_tito",
    "filename": "closure_models.py",
    "callable_line": 131,
    "tito": [
      {
        "port": "captured_variable($local_closure_models?captured_variable_model_tito$complicated_name)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.inner_sink_wrapper",
    "callable_line": 9,
    "code": 5002,
    "line": 13,
    "start": 15,
    "end": 29,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 13, "start": 15, "end": 29 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.inner_sink_wrapper.inner_sink",
                    "port": "leaf:x"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 13, "start": 15, "end": 29 },
            "call_site": "13:4-13:30"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "closure_models.inner_sink_wrapper.inner_sink",
      "index": 0,
      "parameter": "formal(x)"
    },
    "master_handle": "closure_models.inner_sink_wrapper:5002:0:Call|closure_models.inner_sink_wrapper.inner_sink|0|formal(x):beabfe36d7897c6c0f395cc67b2fd9cf"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.inner_sink_wrapper.inner_sink",
    "filename": "closure_models.py",
    "callable_line": 10,
    "sinks": [
      {
        "port": "formal(x, position=0)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "tito": [
      {
        "port": "formal(x, position=0)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.outer",
    "filename": "closure_models.py",
    "callable_line": 30,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_model_query_tito",
    "filename": "closure_models.py",
    "callable_line": 52,
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test$source)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ],
    "model_generators": [ "return_model_query_tito" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_model_taint",
    "filename": "closure_models.py",
    "callable_line": 44,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test$value)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_model_taint_tito",
    "filename": "closure_models.py",
    "callable_line": 49,
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test$source)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test.return_taint",
    "filename": "closure_models.py",
    "callable_line": 41,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 42, "start": 15, "end": 29 }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable",
    "filename": "closure_models.py",
    "callable_line": 123,
    "sinks": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": { "line": 124, "start": 19, "end": 28 },
            "call_site": "124:8-124:29"
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "model_generators": [ "mark_captured_locals_from_decorator_as_tainted" ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable",
    "callable_line": 123,
    "code": 5002,
    "line": 124,
    "start": 19,
    "end": 28,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable",
                    "port": "leaf:$parameter$some_data"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 123, "start": 4, "end": 4 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 124, "start": 19, "end": 28 },
            "call_site": "124:8-124:29"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.test_dsl_decorator_source.decorated_local_function_capturing_local_variable:5002:0:Call|_test_sink|0|formal(arg):bc83c42fb3522f1666af9a49b7af98f7"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_dsl_source.local_function_capturing_local_variable",
    "filename": "closure_models.py",
    "callable_line": 117,
    "sinks": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "captured-variable" } ],
            "origin": { "line": 118, "start": 19, "end": 28 },
            "call_site": "118:8-118:29"
          }
        ]
      }
    ],
    "parameter_sources": [
      {
        "port": "captured_variable($parameter$some_data)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ],
    "model_generators": [ "mark_captured_locals_as_tainted" ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "closure_models.test_dsl_source.local_function_capturing_local_variable",
    "callable_line": 117,
    "code": 5002,
    "line": 118,
    "start": 19,
    "end": 28,
    "filename": "closure_models.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "closure_models.test_dsl_source.local_function_capturing_local_variable",
                    "port": "leaf:$parameter$some_data"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 117, "start": 4, "end": 4 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 118, "start": 19, "end": 28 },
            "call_site": "118:8-118:29"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "closure_models.test_dsl_source.local_function_capturing_local_variable:5002:0:Call|_test_sink|0|formal(arg):957a7606ec7aa86b5573f5613e6f214b"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_tito_transform.return_model_query_tito",
    "filename": "closure_models.py",
    "callable_line": 93,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              { "kind": "ReclassificationFakeTITO@ExtraTraceSink" }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "": 0 },
                "kind": "ReclassificationFakeTITO@LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ],
    "model_generators": [ "return_model_query_tito_transform" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.test_tito_transform.return_model_taint_tito",
    "filename": "closure_models.py",
    "callable_line": 90,
    "sinks": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              { "kind": "ReclassificationFakeTITO@ExtraTraceSink" }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "captured_variable($local_closure_models?test_tito_transform$source)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "": 0 },
                "kind": "ReclassificationFakeTITO@LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.Reclassification.__init__",
    "filename": "closure_models.py",
    "callable_line": 17,
    "tito": [
      {
        "port": "formal(feature, position=2)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[feature]": 3 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": {}
          }
        ]
      },
      {
        "port": "formal(inner, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[inner]": 3 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.Reclassification.reclassify",
    "filename": "closure_models.py",
    "callable_line": 21,
    "sinks": [
      {
        "port": "formal(self, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature2"
                  }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(self, position=0)[inner]",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 0 }, "kind": "LocalReturn" } ],
            "local_features": [ { "always-via": "obscure:unknown-callee" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.outer]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.test.return_model_query_tito]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.test.return_model_taint]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.test.return_model_taint_tito]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.test.return_taint]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.test_tito_transform.return_model_query_tito]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "closure_models.reclassify[formal(inner, position=0)=closure_models.test_tito_transform.return_model_taint_tito]",
    "filename": "closure_models.py",
    "callable_line": 26,
    "tito": [
      {
        "port": "formal(inner, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaValueOf",
                    "parameter": "formal(feature)",
                    "tag": "feature1"
                  }
                ],
                "return_paths": { "": 0 },
                "kind": "LocalReturn"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
