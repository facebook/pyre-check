@generated
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.issue_in_dataclass_constructor",
    "callable_line": 38,
    "code": 5002,
    "line": 39,
    "start": 26,
    "end": 41,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 39,
              "start": 26,
              "end": 41
            },
            "leaves": [ { "kind": "Test", "name": "__test_source" } ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "dataclass_taint.py",
                "line": 39,
                "start": 26,
                "end": 41
              },
              "resolves_to": [ "dataclass_taint.DataClassWIthInit.__init__" ],
              "port": "formal(bad)",
              "length": 1
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "features": [
      { "always-type": "scalar" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.DataClassWithOtherSource.tainted}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "decl": null, "leaves": [ { "kind": "Test" } ] } ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.DataClassWithSource.tainted}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "decl": null, "leaves": [ { "kind": "Test" } ] } ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{dataclass_taint.WeirdDataClass.bad_sink}",
    "sources": [],
    "sinks": [
      {
        "port": "formal($global)",
        "taint": [ { "decl": null, "leaves": [ { "kind": "Test" } ] } ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{dataclass_taint.DataClassWIthInit::__init__}",
    "sources": [],
    "sinks": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{dataclass_taint.WeirdDataClass::__init__}",
    "sources": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "UserControlled" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              {
                "kind": "UserControlled",
                "name": "dataclass_taint.WeirdDataClass.__init__"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ],
    "sinks": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "Obj{dataclass_taint.WeirdDataClass.bad_sink}"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad_sink]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(bad_sink)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad_sink]" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{object::__init__}",
    "sources": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "UserControlled" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              {
                "kind": "UserControlled",
                "name": "dataclass_taint.WeirdDataClass.__init__"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ],
    "sinks": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "Obj{dataclass_taint.WeirdDataClass.bad_sink}"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "root": {
              "filename": "builtins.pyi",
              "line": -1,
              "start": -1,
              "end": -1
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad_sink]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(bad_sink)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad_sink]" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClass.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(benign)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[benign]" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWIthInit.__init__",
    "sources": [],
    "sinks": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 35,
              "start": 20,
              "end": 23
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWithOtherSource.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(tainted)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[tainted]" } ]
          }
        ]
      },
      {
        "port": "formal(not_tainted)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[not_tainted]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.DataClassWithSource.__init__",
    "sources": [],
    "sinks": [],
    "tito": [
      {
        "port": "formal(tainted)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[tainted]" } ]
          }
        ]
      },
      {
        "port": "formal(not_tainted)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[not_tainted]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.WeirdDataClass.__init__",
    "sources": [
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "UserControlled" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 50,
              "start": 23,
              "end": 26
            },
            "leaves": [
              {
                "kind": "UserControlled",
                "name": "dataclass_taint.WeirdDataClass.__init__"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ],
    "sinks": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 52,
              "start": 8,
              "end": 26
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "Obj{dataclass_taint.WeirdDataClass.bad_sink}"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(another)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad_sink]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(bad_sink)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad_sink]" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "" } ]
          }
        ]
      },
      {
        "port": "formal(bad)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "[bad]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.bad_is_tainted",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 18,
              "start": 28,
              "end": 43
            },
            "tito": [ { "line": 18, "start": 28, "end": 43 } ],
            "leaves": [ { "kind": "Test", "name": "__test_source" } ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.bad_is_tainted",
    "callable_line": 17,
    "code": 5002,
    "line": 19,
    "start": 16,
    "end": 23,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 18,
              "start": 28,
              "end": 43
            },
            "tito": [ { "line": 18, "start": 28, "end": 43 } ],
            "leaves": [ { "kind": "Test", "name": "__test_source" } ],
            "features": [
              { "always-via": "issue-broadening" },
              { "always-via": "broadening" },
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 19,
              "start": 16,
              "end": 23
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "issue-broadening" },
      { "always-via": "broadening" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.benign_is_untainted",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 24,
              "start": 28,
              "end": 43
            },
            "tito": [ { "line": 24, "start": 28, "end": 43 } ],
            "leaves": [ { "kind": "Test", "name": "__test_source" } ],
            "features": [
              { "always-via": "tito" },
              { "always-via": "special_source" }
            ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_other_source",
    "sources": [],
    "sinks": [
      {
        "port": "formal(context)[not_tainted]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 80,
              "start": 16,
              "end": 35
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      },
      {
        "port": "formal(context)[tainted]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 79,
              "start": 16,
              "end": 31
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_other_source",
    "callable_line": 78,
    "code": 5002,
    "line": 79,
    "start": 16,
    "end": 31,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 79,
              "start": 16,
              "end": 31
            },
            "leaves": [
              {
                "kind": "Test",
                "name":
                  "Obj{dataclass_taint.DataClassWithOtherSource.tainted}"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 79,
              "start": 16,
              "end": 31
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_source",
    "sources": [],
    "sinks": [
      {
        "port": "formal(context)[not_tainted]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 68,
              "start": 16,
              "end": 35
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      },
      {
        "port": "formal(context)[tainted]",
        "taint": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 67,
              "start": 16,
              "end": 31
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "tito": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "dataclass_taint.test_dataclass_with_source",
    "callable_line": 66,
    "code": 5002,
    "line": 67,
    "start": 16,
    "end": 31,
    "filename": "dataclass_taint.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 67,
              "start": 16,
              "end": 31
            },
            "leaves": [
              {
                "kind": "Test",
                "name": "Obj{dataclass_taint.DataClassWithSource.tainted}"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "dataclass_taint.py",
              "line": 67,
              "start": 16,
              "end": 31
            },
            "leaves": [ { "kind": "Test", "name": "__test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "dataclass_taint.test_weird_dataclass_taint",
    "sources": [
      {
        "port": "result[bad]",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "dataclass_taint.py",
                "line": 56,
                "start": 11,
                "end": 43
              },
              "resolves_to": [ "dataclass_taint.WeirdDataClass.__init__" ],
              "port": "result[bad]",
              "length": 1
            },
            "leaves": [
              {
                "kind": "UserControlled",
                "name": "dataclass_taint.WeirdDataClass.__init__"
              }
            ],
            "features": [ { "always-type": "scalar" } ]
          }
        ]
      }
    ],
    "sinks": [],
    "tito": []
  }
}
