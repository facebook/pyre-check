@generated
{
  "kind": "issue",
  "data": {
    "callable": "features.async_issue_bools",
    "callable_line": 93,
    "code": 5002,
    "line": 95,
    "start": 15,
    "end": 16,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "bool" },
                  { "always-type": "scalar" },
                  { "always-via": "special_source" }
                ],
                "leaves": [ { "name": "_test_source" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "features.py",
                "line": 94,
                "start": 17,
                "end": 39
              },
              "resolves_to": [ "features.async_tuple_of_bools" ],
              "port": "result[0]"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 95,
              "start": 15,
              "end": 16
            }
          }
        ]
      }
    ],
    "features": [
      { "always-type": "bool" },
      { "always-type": "scalar" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "features.async_issue_bools:5002:0:Call|_test_sink|0|formal(arg):3bdb42078e2c8bb931dffef24589a057"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_from_tuple",
    "callable_line": 77,
    "code": 5002,
    "line": 79,
    "start": 15,
    "end": 16,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "bool" },
                  { "always-type": "scalar" },
                  { "always-via": "special_source" }
                ],
                "leaves": [ { "name": "_test_source" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": {
                "filename": "features.py",
                "line": 78,
                "start": 11,
                "end": 34
              },
              "resolves_to": [ "features.return_tuple_of_bools" ],
              "port": "result[0]"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 79,
              "start": 15,
              "end": 16
            }
          }
        ]
      }
    ],
    "features": [
      { "always-type": "bool" },
      { "always-type": "scalar" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "features.issue_from_tuple:5002:0:Call|_test_sink|0|formal(arg):d1f4d3eec61ad0279e2e2819a69a171a"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_via_bool",
    "callable_line": 57,
    "code": 5002,
    "line": 60,
    "start": 15,
    "end": 16,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via": "obscure:model" },
              { "always-type": "bool" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 59, "start": 13, "end": 14 } ],
            "root": {
              "filename": "features.py",
              "line": 58,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 60,
              "start": 15,
              "end": 16
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "obscure:model" },
      { "always-type": "bool" },
      { "always-type": "scalar" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "features.issue_via_bool:5002:0:Call|_test_sink|0|formal(arg):57f857d039efde9df93f0a53da9abc79"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_via_equality",
    "callable_line": 67,
    "code": 5002,
    "line": 70,
    "start": 15,
    "end": 30,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via": "obscure:model" },
              { "always-type": "bool" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 69, "start": 22, "end": 23 } ],
            "call": {
              "position": {
                "filename": "features.py",
                "line": 68,
                "start": 8,
                "end": 32
              },
              "resolves_to": [ "features.returns_tainted_object" ],
              "port": "result"
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 70,
              "start": 15,
              "end": 30
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "obscure:model" },
      { "always-type": "bool" },
      { "always-type": "scalar" },
      { "always-via": "tito" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "features.issue_via_equality:5002:0:Call|_test_sink|0|formal(arg):a8a79cf353af7aca6875842989231e92"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_via_in",
    "callable_line": 102,
    "code": 5002,
    "line": 104,
    "start": 15,
    "end": 23,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "bool" },
              { "always-type": "scalar" }
            ],
            "root": {
              "filename": "features.py",
              "line": 103,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 104,
              "start": 15,
              "end": 23
            }
          }
        ]
      }
    ],
    "features": [
      { "always-type": "bool" },
      { "always-type": "scalar" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "features.issue_via_in:5002:0:Call|_test_sink|0|formal(arg):bfe94ee38d89fbed953f784a39443d8c"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "features.issue_via_in",
    "callable_line": 102,
    "code": 5002,
    "line": 105,
    "start": 15,
    "end": 23,
    "filename": "features.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "bool" },
              { "always-type": "scalar" }
            ],
            "root": {
              "filename": "features.py",
              "line": 103,
              "start": 8,
              "end": 22
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 105,
              "start": 15,
              "end": 23
            }
          }
        ]
      }
    ],
    "features": [
      { "always-type": "bool" },
      { "always-type": "scalar" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ],
    "master_handles": [
      "features.issue_via_in:5002:0:Call|_test_sink|1|formal(arg):8b8fbc207f24e7cd4e765e7157929554"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.async_tuple_of_bools",
    "sources": [
      {
        "port": "result[0]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "bool" },
              { "always-type": "scalar" }
            ],
            "root": {
              "filename": "features.py",
              "line": 90,
              "start": 11,
              "end": 25
            }
          }
        ]
      },
      {
        "port": "result[1]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "bool" },
              { "always-type": "scalar" }
            ],
            "root": {
              "filename": "features.py",
              "line": 90,
              "start": 27,
              "end": 41
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.dynamic_feature_tito",
    "tito": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "via": "dynamic_feature" } ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.len",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" },
                  { "always-type": "scalar" }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.min",
    "tito": [
      {
        "port": "formal(y)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" },
                  { "always-type": "scalar" }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.named",
    "tito": [
      {
        "port": "formal(named_parameter)",
        "taint": [
          {
            "kinds": [
              {
                "features": [
                  { "always-type": "integer" },
                  { "always-type": "scalar" }
                ],
                "return_paths": [ "" ],
                "kind": "LocalReturn"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.return_tuple_of_bools",
    "sources": [
      {
        "port": "result[0]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "bool" },
              { "always-type": "scalar" }
            ],
            "root": {
              "filename": "features.py",
              "line": 74,
              "start": 11,
              "end": 25
            }
          }
        ]
      },
      {
        "port": "result[1]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "bool" },
              { "always-type": "scalar" }
            ],
            "root": {
              "filename": "features.py",
              "line": 74,
              "start": 27,
              "end": 41
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.returns_tainted_object",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "features.py",
              "line": 64,
              "start": 11,
              "end": 25
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_constructor",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "" ], "length": 1, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-via": "obscure:model" },
              { "always-type": "integer" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 46, "start": 15, "end": 16 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_len",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "" ], "length": 1, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 23, "start": 15, "end": 16 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_min_left",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "" ], "length": 1, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 27, "start": 15, "end": 16 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_min_or_not",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "local_features": [
              { "type": "integer" },
              { "type": "scalar" },
              { "via": "tito" }
            ],
            "tito": [ { "line": 40, "start": 19, "end": 20 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_min_right",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "" ], "length": 1, "kind": "LocalReturn" }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito": [ { "line": 31, "start": 18, "end": 19 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_via_named",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "" ], "length": 1, "kind": "LocalReturn" }
            ],
            "local_features": [
              { "always-type": "integer" },
              { "always-type": "scalar" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 35, "start": 33, "end": 34 } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "features.tito_with_tuple",
    "tito": [
      {
        "port": "formal(o)",
        "taint": [
          {
            "kinds": [
              { "return_paths": [ "[0]", "[1]" ], "kind": "LocalReturn" }
            ],
            "local_features": [
              { "type": "integer" },
              { "type": "scalar" },
              { "via": "tito" }
            ],
            "tito": [
              { "line": 84, "start": 19, "end": 20 },
              { "line": 84, "start": 34, "end": 35 }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
