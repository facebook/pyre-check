@generated
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "filename": "builtins.pyi",
    "callable_line": 618,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "filename": "builtins.pyi",
    "callable_line": 619,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_annotated.test1_alarm1",
    "callable_line": 25,
    "code": 5002,
    "line": 28,
    "start": 15,
    "end": 18,
    "filename": "model_query_annotated.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "Obj{model_query_annotated.Test1_C.a}",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Optional[float]" }
            ],
            "origin": { "line": 28, "start": 15, "end": 18 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 28, "start": 15, "end": 18 },
            "call_site": "28:4-28:19"
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Optional[float]" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "model_query_annotated.test1_alarm1:5002:0:Call|_test_sink|0|formal(arg):d18d16b3ac087c81541bb98ad54eaa39"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_annotated.test1_alarm2",
    "callable_line": 31,
    "code": 5002,
    "line": 34,
    "start": 15,
    "end": 18,
    "filename": "model_query_annotated.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "Obj{model_query_annotated.Test1_C.b}",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Optional[float]" }
            ],
            "origin": { "line": 34, "start": 15, "end": 18 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 34, "start": 15, "end": 18 },
            "call_site": "34:4-34:19"
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Optional[float]" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "model_query_annotated.test1_alarm2:5002:0:Call|_test_sink|0|formal(arg):c6ed0280dd85d05f1393f0cb0972c470"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_annotated.test1_alarm3",
    "callable_line": 37,
    "code": 5002,
    "line": 39,
    "start": 15,
    "end": 18,
    "filename": "model_query_annotated.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "Obj{model_query_annotated.Test1_C.x}",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Optional[float]" }
            ],
            "origin": { "line": 39, "start": 15, "end": 18 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 39, "start": 15, "end": 18 },
            "call_site": "39:4-39:19"
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Optional[float]" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "model_query_annotated.test1_alarm3:5002:0:Call|_test_sink|0|formal(arg):c759ed3c804e9d78a0f981103e0e21dc"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_annotated.test1_alarm4",
    "callable_line": 42,
    "code": 5002,
    "line": 44,
    "start": 15,
    "end": 18,
    "filename": "model_query_annotated.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "Obj{model_query_annotated.Test1_C.y}",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Optional[float]" }
            ],
            "origin": { "line": 44, "start": 15, "end": 18 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 44, "start": 15, "end": 18 },
            "call_site": "44:4-44:19"
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Optional[float]" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "model_query_annotated.test1_alarm4:5002:0:Call|_test_sink|0|formal(arg):3c2f0013f846fd8b28d85ca246eae6dd"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_annotated.test2_alarm1",
    "callable_line": 53,
    "code": 5002,
    "line": 55,
    "start": 15,
    "end": 18,
    "filename": "model_query_annotated.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "Obj{model_query_annotated.Test2_C.a}",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Optional[float]" }
            ],
            "origin": { "line": 55, "start": 15, "end": 18 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 55, "start": 15, "end": 18 },
            "call_site": "55:4-55:19"
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Optional[float]" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "model_query_annotated.test2_alarm1:5002:0:Call|_test_sink|0|formal(arg):b8e24537537f3d32304c259208734d83"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_annotated.test2_alarm2",
    "callable_line": 58,
    "code": 5002,
    "line": 60,
    "start": 15,
    "end": 18,
    "filename": "model_query_annotated.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "Obj{model_query_annotated.Test2_C.x}",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Optional[float]" }
            ],
            "origin": { "line": 60, "start": 15, "end": 18 }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 60, "start": 15, "end": 18 },
            "call_site": "60:4-60:19"
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Optional[float]" },
      { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "model_query_annotated.test2_alarm2:5002:0:Call|_test_sink|0|formal(arg):8997edd700a2f9344b93da74dec2ee25"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_annotated.test3_noalarm1",
    "filename": "model_query_annotated.py",
    "callable_line": 68,
    "sinks": [
      {
        "port": "formal(a, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 69, "start": 15, "end": 16 },
            "call_site": "69:4-69:17"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_annotated.test3_noalarm2",
    "filename": "model_query_annotated.py",
    "callable_line": 72,
    "sinks": [
      {
        "port": "formal(b, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-type": "integer" }, { "always-type": "scalar" }
            ],
            "origin": { "line": 73, "start": 15, "end": 16 },
            "call_site": "73:4-73:17"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_annotated.Test1_C.a}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  { "kind": "ViaTypeOf", "parameter": "formal($global)" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "model_generators": [ "get_model_query_annotated_test1_sources" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_annotated.Test1_C.b}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  { "kind": "ViaTypeOf", "parameter": "formal($global)" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "model_generators": [ "get_model_query_annotated_test1_sources" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_annotated.Test1_C.x}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  { "kind": "ViaTypeOf", "parameter": "formal($global)" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "model_generators": [ "get_model_query_annotated_test1_sources" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_annotated.Test1_C.y}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  { "kind": "ViaTypeOf", "parameter": "formal($global)" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "model_generators": [ "get_model_query_annotated_test1_sources" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_annotated.Test2_C.a}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  { "kind": "ViaTypeOf", "parameter": "formal($global)" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "model_generators": [ "get_model_query_annotated_test2_sources" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_annotated.Test2_C.x}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  { "kind": "ViaTypeOf", "parameter": "formal($global)" }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "model_generators": [ "get_model_query_annotated_test2_sources" ]
  }
}
