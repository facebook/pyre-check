@generated
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test1_alarm1",
    "callable_line": 14,
    "code": 5002,
    "line": 16,
    "start": 13,
    "end": 14,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 15,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.test1_f1" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via-type": "str" } ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 16,
              "start": 13,
              "end": 14
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "str" },
      { "always-via": "special_source" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test1_alarm1:5002:0:Call|model_query_parameters_viatypeof.test1_f1|0|formal(a):c51e901c4f6836be53837c9f1907f539"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test1_alarm2",
    "callable_line": 19,
    "code": 5002,
    "line": 21,
    "start": 18,
    "end": 19,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 20,
              "start": 31,
              "end": 45
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.test1_f1" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Annotated[str]" }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 21,
              "start": 18,
              "end": 19
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "typing.Annotated[str]" },
      { "always-via": "special_source" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test1_alarm2:5002:0:Call|model_query_parameters_viatypeof.test1_f1|0|formal(b):5f13254d8db4ffe94e337525439dc6c2"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test1_alarm3",
    "callable_line": 24,
    "code": 5002,
    "line": 26,
    "start": 23,
    "end": 24,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 25,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.test1_f1" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via-type": "int" } ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 26,
              "start": 23,
              "end": 24
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "int" },
      { "always-via": "special_source" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test1_alarm3:5002:0:Call|model_query_parameters_viatypeof.test1_f1|0|formal(c):2d29c72d71f3145db2a63205262a151c"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test2_alarm1",
    "callable_line": 45,
    "code": 5002,
    "line": 47,
    "start": 9,
    "end": 10,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 46,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.Test2_C.f1" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via-type": "str" } ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 47,
              "start": 9,
              "end": 10
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "str" },
      { "always-via": "special_source" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test2_alarm1:5002:0:Call|model_query_parameters_viatypeof.Test2_C.f1|0|formal(a):ba3f43ef71adac88b842f5676c2925da"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test2_alarm2",
    "callable_line": 50,
    "code": 5002,
    "line": 52,
    "start": 14,
    "end": 15,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 51,
              "start": 24,
              "end": 38
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.Test2_C.f1" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              { "always-via-type": "typing.Dict[str, int]" }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 52,
              "start": 14,
              "end": 15
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-type": "typing.Dict[str, int]" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test2_alarm2:5002:0:Call|model_query_parameters_viatypeof.Test2_C.f1|0|formal(b):c3718e253c030c7757aac7dc1aceb3ab"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test2_alarm3",
    "callable_line": 55,
    "code": 5002,
    "line": 57,
    "start": 19,
    "end": 20,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 56,
              "start": 17,
              "end": 31
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.Test2_C.f1" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              {
                "always-via-type": "model_query_parameters_viatypeof.Test2_T"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 57,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-type": "model_query_parameters_viatypeof.Test2_T" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test2_alarm3:5002:0:Call|model_query_parameters_viatypeof.Test2_C.f1|0|formal(c):b815fd8d1aa0201159837f3010a77365"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test2_alarm4",
    "callable_line": 60,
    "code": 5002,
    "line": 62,
    "start": 9,
    "end": 10,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 61,
              "start": 13,
              "end": 27
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.Test2_C.f2" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via-type": "int" } ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 62,
              "start": 9,
              "end": 10
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via-type": "int" },
      { "always-via": "special_source" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test2_alarm4:5002:0:Call|model_query_parameters_viatypeof.Test2_C.f2|0|formal(a):874735c5414de7a64dd7628a8ca39839"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test2_alarm5",
    "callable_line": 65,
    "code": 5002,
    "line": 67,
    "start": 14,
    "end": 15,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 66,
              "start": 29,
              "end": 43
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.Test2_C.f2" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [
              {
                "always-via-type":
                  "typing.List[typing.List[model_query_parameters_viatypeof.Test2_T]]"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 67,
              "start": 14,
              "end": 15
            }
          }
        ]
      }
    ],
    "features": [
      {
        "always-via-type":
          "typing.List[typing.List[model_query_parameters_viatypeof.Test2_T]]"
      },
      { "always-via": "special_source" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test2_alarm5:5002:0:Call|model_query_parameters_viatypeof.Test2_C.f2|0|formal(b):ff2f385ddca1a1a4f2a1f47e981f8479"
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_parameters_viatypeof.test2_alarm6",
    "callable_line": 70,
    "code": 5002,
    "line": 72,
    "start": 19,
    "end": 20,
    "filename": "model_query_parameters_viatypeof.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 71,
              "start": 15,
              "end": 29
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_parameters_viatypeof.Test2_C.f2" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via-type": "float" } ],
            "root": {
              "filename": "model_query_parameters_viatypeof.py",
              "line": 72,
              "start": 19,
              "end": 20
            }
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via-type": "float" }
    ],
    "master_handles": [
      "model_query_parameters_viatypeof.test2_alarm6:5002:0:Call|model_query_parameters_viatypeof.Test2_C.f2|0|formal(c):c4d9be9b05c06bc0c027f3a7a3be2337"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_parameters_viatypeof.Test2_C.f1",
    "sinks": [
      {
        "port": "formal(c)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 3; name = c; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(b)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 2; name = b; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(a)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 1; name = a; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_parameters_viatypeof.Test2_C.f2",
    "sinks": [
      {
        "port": "formal(c)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 3; name = c; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(b)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 2; name = b; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(a)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 1; name = a; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_parameters_viatypeof.test1_f1",
    "sinks": [
      {
        "port": "formal(c)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 2; name = c; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(b)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 1; name = b; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      },
      {
        "port": "formal(a)",
        "taint": [
          {
            "kinds": [
              {
                "via_features": [
                  {
                    "kind": "ViaTypeOf",
                    "parameter":
                      "PositionalParameter {position = 0; name = a; positional_only = false}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "decl": null
          }
        ]
      }
    ]
  }
}
