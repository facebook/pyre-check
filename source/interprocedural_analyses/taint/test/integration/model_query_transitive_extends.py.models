@generated
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test2_alarm1",
    "callable_line": 99,
    "code": 5002,
    "line": 100,
    "start": 10,
    "end": 24,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [ { "name": "_test_source" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 100,
              "start": 10,
              "end": 24
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  { "name": "model_query_transitive_extends.Test2_D.foo" }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 100,
              "start": 10,
              "end": 24
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_source" } ],
    "master_handles": [
      "model_query_transitive_extends.test2_alarm1:5002:0:Call|model_query_transitive_extends.Test2_D.foo|0|formal(attribute):6bcbf812a068cebc047cbcbff953ae6a"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable":
      "Ovr{model_query_transitive_extends.UnrelatedClass::__init__}",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_transitive_extends.Test1_C.attribute}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_transitive_extends.Test1_C.instance}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_transitive_extends.Test1_C1.attribute}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_transitive_extends.Test1_C1.instance}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_transitive_extends.Test1_C2.attribute}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Obj{model_query_transitive_extends.Test1_C2.instance}",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{model_query_transitive_extends.Test1_C1::__init__}",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{model_query_transitive_extends.Test1_C2::__init__}",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{model_query_transitive_extends.Test1_C::__init__}",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{model_query_transitive_extends.Test1_D::__init__}",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{object::__init__}",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.Test1_C.__init__",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.Test1_C1.__init__",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.Test1_C2.__init__",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.Test1_D.__init__",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.Test2_D.foo",
    "sinks": [
      {
        "port": "formal(attribute)",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "decl": null } ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.UnrelatedClass.__init__",
    "tito": [
      {
        "port": "formal(self)",
        "taint": [
          {
            "kinds": [ { "return_paths": [ "" ], "kind": "LocalReturn" } ],
            "decl": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.misc_noalarm1",
    "sinks": [
      {
        "port": "formal(c)[attribute]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 116,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.misc_noalarm2",
    "sinks": [
      {
        "port": "formal(c)[instance]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 120,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm1",
    "sinks": [
      {
        "port": "formal(c)[attribute]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 68,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm1",
    "callable_line": 67,
    "code": 5002,
    "line": 68,
    "start": 15,
    "end": 26,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C1.attribute}"
                  },
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C.attribute}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 68,
              "start": 15,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 68,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "master_handles": [
      "model_query_transitive_extends.test1_alarm1:5002:0:Call|_test_sink|0|formal(arg):d7076c5599d9346cb254702aca62ca8a"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm2",
    "sinks": [
      {
        "port": "formal(c)[instance]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 72,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm2",
    "callable_line": 71,
    "code": 5002,
    "line": 72,
    "start": 15,
    "end": 25,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C.instance}"
                  },
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C1.instance}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 72,
              "start": 15,
              "end": 25
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 72,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "master_handles": [
      "model_query_transitive_extends.test1_alarm2:5002:0:Call|_test_sink|0|formal(arg):0dba02726232ed3eb66caff54e15ece8"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm3",
    "sinks": [
      {
        "port": "formal(c)[attribute]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 76,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm3",
    "callable_line": 75,
    "code": 5002,
    "line": 76,
    "start": 15,
    "end": 26,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C2.attribute}"
                  },
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C1.attribute}"
                  },
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C.attribute}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 76,
              "start": 15,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 76,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "master_handles": [
      "model_query_transitive_extends.test1_alarm3:5002:0:Call|_test_sink|0|formal(arg):79cf0abf6a62591d8d4547fb1a0a4f4b"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm4",
    "sinks": [
      {
        "port": "formal(c)[instance]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 80,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm4",
    "callable_line": 79,
    "code": 5002,
    "line": 80,
    "start": 15,
    "end": 25,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C.instance}"
                  },
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C1.instance}"
                  },
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C2.instance}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 80,
              "start": 15,
              "end": 25
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 80,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "master_handles": [
      "model_query_transitive_extends.test1_alarm4:5002:0:Call|_test_sink|0|formal(arg):4e1e9120bee89ad21dafd2b91c82331d"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm5",
    "sinks": [
      {
        "port": "formal(c)[attribute]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 84,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm5",
    "callable_line": 83,
    "code": 5002,
    "line": 84,
    "start": 15,
    "end": 26,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C.attribute}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 84,
              "start": 15,
              "end": 26
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 84,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "master_handles": [
      "model_query_transitive_extends.test1_alarm5:5002:0:Call|_test_sink|0|formal(arg):35e29f46c439f3c7e95542f60de3cc0c"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm6",
    "sinks": [
      {
        "port": "formal(c)[instance]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 88,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "model_query_transitive_extends.test1_alarm6",
    "callable_line": 87,
    "code": 5002,
    "line": 88,
    "start": 15,
    "end": 25,
    "filename": "model_query_transitive_extends.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name":
                      "Obj{model_query_transitive_extends.Test1_C.instance}"
                  }
                ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 88,
              "start": 15,
              "end": 25
            }
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 88,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "master_handles": [
      "model_query_transitive_extends.test1_alarm6:5002:0:Call|_test_sink|0|formal(arg):8f20433d2d79bad30ba257a0ffc3dc2f"
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_noalarm1",
    "sinks": [
      {
        "port": "formal(c)[attribute]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 92,
              "start": 15,
              "end": 26
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "model_query_transitive_extends.test1_noalarm2",
    "sinks": [
      {
        "port": "formal(c)[instance]",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink" } ],
                "kind": "Test"
              }
            ],
            "root": {
              "filename": "model_query_transitive_extends.py",
              "line": 96,
              "start": 15,
              "end": 25
            }
          }
        ]
      }
    ]
  }
}
