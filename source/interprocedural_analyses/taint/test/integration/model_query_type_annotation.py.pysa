ModelQuery(
  name = "get_model_query_type_annotation_test1_sources",
  find = "functions",
  where = [
    name.matches("test1_"),
    any_parameter.annotation.fully_qualified.equals("str")
  ],
  model = [
    Parameters(TaintSource[Test])
  ]
)

ModelQuery(
  name = "get_model_query_type_annotation_test2_sources",
  find = "methods",
  where = [
    name.matches("test2_"),
    cls.fully_qualified_name.equals("model_query_type_annotation.Test2_C"),
    any_parameter.annotation.fully_qualified.matches("Test2_T")
  ],
  model = [
    Parameters(TaintSource[Test], where=[Not(name.equals("self")), type_annotation.fully_qualified.matches("Test2_T")])
  ]
)

ModelQuery(
  name = "get_model_query_type_annotation_test4_sources",
  find = "functions",
  where = [
    name.matches("test4_"),
    return_annotation.fully_qualified.equals("str")
  ],
  model = [
    Returns(TaintSource[Test])
  ]
)

ModelQuery(
  name = "get_model_query_type_annotation_test5_sources",
  find = "functions",
  where = [
    name.matches("test5_"),
    return_annotation.fully_qualified.matches("Test5_T")
  ],
  model = [
    Returns(TaintSource[Test])
  ]
)

ModelQuery(
  name = "get_model_query_type_annotation_test7_sources",
  find = "attributes",
  where = [
    cls.fully_qualified_name.equals("model_query_type_annotation.Test7_C"),
    type_annotation.fully_qualified.equals("int")
  ],
  model = [
    AttributeModel(TaintSource[Test])
  ]
)


ModelQuery(
  name = "get_model_query_type_annotation_test8_sources",
  find = "attributes",
  where = [
    cls.fully_qualified_name.equals("model_query_type_annotation.Test8_C"),
    type_annotation.fully_qualified.matches("str")
  ],
  model = [
    AttributeModel(TaintSource[Test])
  ]
)


ModelQuery(
  name = "get_model_query_type_annotation_test9_sources",
  find = "attributes",
  where = [
    cls.fully_qualified_name.equals("model_query_type_annotation.Test9_C"),
    type_annotation.is_annotated_type()
  ],
  model = [
    AttributeModel(TaintSource[Test])
  ]
)
