@generated
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.combine_tainted_user_and_dangerous_vc",
    "callable_line": 27,
    "code": 4321,
    "line": 30,
    "start": 22,
    "end": 24,
    "filename": "multiple_sources.py",
    "message": "User controlled and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 29,
              "start": 9,
              "end": 29
            },
            "leaves": [
              {
                "kind": "PermissiveContext",
                "name": "multiple_sources.permissive_context"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 30,
              "start": 22,
              "end": 24
            },
            "leaves": [
              { "kind": "TriggeredPartialSink[UserControlledAndVC[vc]]" }
            ]
          }
        ]
      }
    ],
    "features": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.issue_with_test_a_and_b",
    "callable_line": 84,
    "code": 4322,
    "line": 86,
    "start": 43,
    "end": 63,
    "filename": "multiple_sources.py",
    "message": "TestA or TestB and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 86,
              "start": 43,
              "end": 63
            },
            "leaves": [
              {
                "kind": "PermissiveContext",
                "name": "multiple_sources.permissive_context"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 86,
              "start": 43,
              "end": 63
            },
            "leaves": [
              { "kind": "TriggeredPartialSink[ExpectsEitherTest[b]]" }
            ]
          }
        ]
      }
    ],
    "features": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.issue_with_test_a_and_b",
    "callable_line": 84,
    "code": 4322,
    "line": 85,
    "start": 43,
    "end": 63,
    "filename": "multiple_sources.py",
    "message": "TestA or TestB and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 85,
              "start": 43,
              "end": 63
            },
            "leaves": [
              {
                "kind": "PermissiveContext",
                "name": "multiple_sources.permissive_context"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 85,
              "start": 43,
              "end": 63
            },
            "leaves": [
              { "kind": "TriggeredPartialSink[ExpectsEitherTest[b]]" }
            ]
          }
        ]
      }
    ],
    "features": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.issue_with_triggered_context",
    "callable_line": 48,
    "code": 4321,
    "line": 50,
    "start": 34,
    "end": 36,
    "filename": "multiple_sources.py",
    "message": "User controlled and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 49,
              "start": 9,
              "end": 29
            },
            "leaves": [
              {
                "kind": "PermissiveContext",
                "name": "multiple_sources.permissive_context"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "multiple_sources.py",
                "line": 50,
                "start": 34,
                "end": 36
              },
              "resolves_to": [
                "multiple_sources.demonstrate_triggered_context"
              ],
              "port": "formal(vc)",
              "length": 1
            },
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[vc]]",
                "name": "multiple_sources.Node.send"
              }
            ]
          }
        ]
      }
    ],
    "features": []
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "multiple_sources.issue_with_triggered_input",
    "callable_line": 43,
    "code": 4321,
    "line": 45,
    "start": 32,
    "end": 34,
    "filename": "multiple_sources.py",
    "message": "User controlled and permissive context combine",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 44,
              "start": 9,
              "end": 32
            },
            "leaves": [
              {
                "kind": "UserControlled",
                "name": "multiple_sources.user_controlled_input"
              }
            ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "multiple_sources.py",
                "line": 45,
                "start": 32,
                "end": 34
              },
              "resolves_to": [
                "multiple_sources.demonstrate_triggered_input"
              ],
              "port": "formal(id)",
              "length": 1
            },
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[id]]",
                "name": "multiple_sources.Node.send"
              }
            ],
            "features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "tito" }
            ]
          }
        ]
      }
    ],
    "features": [
      { "has": "first-index" },
      { "first-index": "<unknown>" },
      { "always-via": "tito" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{multiple_sources.Node::__init__}",
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "leaves": [
              { "kind": "LocalReturn", "name": "[id]", "depth": 0 }
            ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "", "depth": 0 } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Ovr{object::__init__}",
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "leaves": [
              { "kind": "LocalReturn", "name": "[id]", "depth": 0 }
            ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "", "depth": 0 } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.Node.__init__",
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "leaves": [
              { "kind": "LocalReturn", "name": "[id]", "depth": 0 }
            ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "LocalReturn", "name": "", "depth": 0 } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.Node.get",
    "tito": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 16, "start": 19, "end": 21 } ],
            "leaves": [
              { "kind": "LocalReturn", "name": "[id]", "depth": 1 }
            ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      },
      {
        "port": "formal(cls)",
        "taint": [
          {
            "decl": null,
            "tito": [ { "line": 16, "start": 15, "end": 18 } ],
            "leaves": [ { "kind": "LocalReturn", "name": "", "depth": 1 } ],
            "features": [ { "always-via": "tito" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.Node.send",
    "sinks": [
      {
        "port": "formal(vc)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "PartialSink[UserControlledAndVC[vc]]" } ]
          }
        ]
      },
      {
        "port": "formal(self)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "PartialSink[UserControlledAndVC[id]]" } ]
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.a_source",
    "sources": [
      {
        "port": "result",
        "taint": [ { "decl": null, "leaves": [ { "kind": "TestA" } ] } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.b_source",
    "sources": [
      {
        "port": "result",
        "taint": [ { "decl": null, "leaves": [ { "kind": "TestB" } ] } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.combines_tests_and_context",
    "sinks": [
      {
        "port": "formal(vc)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "PartialSink[ExpectsEitherTest[b]]" } ]
          }
        ]
      },
      {
        "port": "formal(test)",
        "taint": [
          {
            "decl": null,
            "leaves": [ { "kind": "PartialSink[ExpectsEitherTest[a]]" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.demonstrate_triggered_context",
    "sinks": [
      {
        "port": "formal(vc)",
        "taint": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 35,
              "start": 22,
              "end": 24
            },
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[vc]]",
                "name": "multiple_sources.Node.send"
              }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.demonstrate_triggered_input",
    "sinks": [
      {
        "port": "formal(id)",
        "taint": [
          {
            "root": {
              "filename": "multiple_sources.py",
              "line": 40,
              "start": 4,
              "end": 16
            },
            "tito": [ { "line": 40, "start": 13, "end": 15 } ],
            "leaves": [
              {
                "kind": "TriggeredPartialSink[UserControlledAndVC[id]]",
                "name": "multiple_sources.Node.send"
              }
            ],
            "features": [
              { "has": "first-index" },
              { "first-index": "<unknown>" },
              { "always-via": "tito" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.permissive_context",
    "sources": [
      {
        "port": "result",
        "taint": [
          { "decl": null, "leaves": [ { "kind": "PermissiveContext" } ] }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "multiple_sources.user_controlled_input",
    "sources": [
      {
        "port": "result",
        "taint": [
          { "decl": null, "leaves": [ { "kind": "UserControlled" } ] }
        ]
      }
    ]
  }
}
