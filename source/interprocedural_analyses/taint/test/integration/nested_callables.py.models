@generated
{
  "kind": "issue",
  "data": {
    "callable": "nested_callables.call_outer",
    "callable_line": 26,
    "code": 5002,
    "line": 27,
    "start": 10,
    "end": 24,
    "filename": "nested_callables.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 27,
              "start": 10,
              "end": 24
            },
            "leaves": [ { "kind": "Test", "name": "_test_source" } ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "call": {
              "position": {
                "filename": "nested_callables.py",
                "line": 27,
                "start": 10,
                "end": 24
              },
              "resolves_to": [ "nested_callables.outer" ],
              "port": "formal(x)",
              "length": 2
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ],
    "features": [
      { "always-type": "scalar" },
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "nested_callables.foo.inner",
    "callable_line": 11,
    "code": 5002,
    "line": 13,
    "start": 19,
    "end": 20,
    "filename": "nested_callables.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 12,
              "start": 12,
              "end": 26
            },
            "leaves": [ { "kind": "Test", "name": "_test_source" } ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 13,
              "start": 19,
              "end": 20
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [ { "always-via": "special_sink" } ]
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" },
      { "always-via": "special_sink" }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable":
      "nested_callables.outer_calling_other_function.inner_calling_other_function",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "nested_callables.py",
                "line": 36,
                "start": 18,
                "end": 19
              },
              "resolves_to": [ "nested_callables.some_sink" ],
              "port": "formal(x)",
              "length": 1
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "nested_callables.foo.inner_with_model",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 16,
              "start": 15,
              "end": 29
            },
            "leaves": [ { "kind": "Test", "name": "_test_source" } ],
            "features": [ { "always-via": "special_source" } ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "nested_callables.outer",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "nested_callables.py",
                "line": 23,
                "start": 17,
                "end": 18
              },
              "resolves_to": [ "nested_callables.outer.inner" ],
              "port": "formal(x)",
              "length": 1
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "nested_callables.outer.inner",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 21,
              "start": 19,
              "end": 20
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "nested_callables.outer_calling_other_function",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "call": {
              "position": {
                "filename": "nested_callables.py",
                "line": 38,
                "start": 33,
                "end": 34
              },
              "resolves_to": [
                "nested_callables.outer_calling_other_function.inner_calling_other_function"
              ],
              "port": "formal(x)",
              "length": 2
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "nested_callables.some_sink",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "root": {
              "filename": "nested_callables.py",
              "line": 31,
              "start": 15,
              "end": 16
            },
            "leaves": [ { "kind": "Test", "name": "_test_sink" } ],
            "features": [
              { "always-type": "scalar" },
              { "always-via": "special_sink" }
            ]
          }
        ]
      }
    ]
  }
}
