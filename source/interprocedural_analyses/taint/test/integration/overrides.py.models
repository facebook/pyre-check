@generated
{
  "kind": "model",
  "data": {
    "callable": "_test_sink",
    "filename": "builtins.pyi",
    "callable_line": 618,
    "sinks": [
      {
        "port": "formal(arg, position=0)",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "_test_source",
    "filename": "builtins.pyi",
    "callable_line": 619,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ],
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.constructorTest",
    "filename": "overrides.py",
    "callable_line": 157,
    "sources": [
      {
        "port": "result[r]",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 158, "start": 15, "end": 29 } ],
            "origin": { "line": 158, "start": 15, "end": 29 }
          }
        ]
      }
    ]
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testB",
    "callable_line": 109,
    "code": 5002,
    "line": 112,
    "start": 20,
    "end": 21,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 110, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 112, "start": 20, "end": 21 },
              "resolves_to": [ "overrides.B.classMethod" ],
              "port": "formal(arg, position=1)",
              "call_site": "112:4-112:22"
            },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "receiver_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": true
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.B.classMethod",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testB:5002:0:Call|overrides.B.classMethod|0|formal(arg):42ef7d7a7344b2f9d5f1045e588277d3"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testB",
    "callable_line": 109,
    "code": 5002,
    "line": 111,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 110, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 111, "start": 14, "end": 15 },
              "resolves_to": [ "overrides.D.methodA" ],
              "port": "formal(arg, position=1)",
              "call_site": "111:4-111:16"
            },
            "receiver_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.C.methodA",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testB:5002:0:Call|overrides.C.methodA|0|formal(arg):11ff9fd3d2c724202b6ea0cd0be5f2fb"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testBase",
    "callable_line": 77,
    "code": 5002,
    "line": 80,
    "start": 20,
    "end": 21,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 78, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 10, "upper": 21 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 80, "start": 20, "end": 21 },
              "resolves_to": [ "overrides.B.classMethod" ],
              "port": "formal(arg, position=1)",
              "call_site": "80:4-80:22"
            },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "receiver_interval": [ { "lower": 10, "upper": 21 } ],
            "is_self_call": true
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.Base.classMethod",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testBase:5002:0:Call|overrides.Base.classMethod|0|formal(arg):6304845a214712032ec8b09f3d1a2f41"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testBase",
    "callable_line": 77,
    "code": 5002,
    "line": 79,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 78, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 10, "upper": 21 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 79, "start": 14, "end": 15 },
              "resolves_to": [ "overrides.A.methodA", "overrides.D.methodA" ],
              "port": "formal(arg, position=1)",
              "call_site": "79:4-79:16"
            },
            "receiver_interval": [ { "lower": 10, "upper": 21 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.Base.methodA",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testBase:5002:0:Call|overrides.Base.methodA|0|formal(arg):d582808863ca13f526636f4be61b3798"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testC",
    "callable_line": 125,
    "code": 5002,
    "line": 127,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 126, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.B.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 14, "upper": 19 } ],
            "is_self_call": false
          },
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 126, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 14, "upper": 19 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 127, "start": 14, "end": 15 },
              "resolves_to": [ "overrides.D.methodA" ],
              "port": "formal(arg, position=1)",
              "call_site": "127:4-127:16"
            },
            "receiver_interval": [ { "lower": 14, "upper": 19 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.C.methodA",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testC:5002:0:Call|overrides.C.methodA|0|formal(arg):00a5a4693306bd5bdaf6271b2eb334c9"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testD",
    "callable_line": 141,
    "code": 5002,
    "line": 143,
    "start": 14,
    "end": 15,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 142, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 143, "start": 14, "end": 15 },
              "resolves_to": [ "overrides.D.methodA" ],
              "port": "formal(arg, position=1)",
              "call_site": "143:4-143:16"
            },
            "receiver_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.D.methodA",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testD:5002:0:Call|overrides.D.methodA|0|formal(arg):8b6e6664ece15ea2f6a4cfa900d281ea"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.testStaticB",
    "callable_line": 115,
    "code": 5002,
    "line": 117,
    "start": 18,
    "end": 19,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 116, "start": 8, "end": 19 },
              "resolves_to": [ "overrides.B.methodB", "overrides.D.methodB" ],
              "port": "result"
            },
            "receiver_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "length": 1,
                "kind": "Test"
              }
            ],
            "call": {
              "position": { "line": 117, "start": 18, "end": 19 },
              "resolves_to": [ "overrides.B.classMethod" ],
              "port": "formal(arg, position=1)",
              "call_site": "117:4-117:20"
            },
            "receiver_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "features": [
      { "always-via": "special_source" }, { "always-via": "special_sink" }
    ],
    "sink_handle": {
      "kind": "Call",
      "callee": "overrides.B.classMethod",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.testStaticB:5002:0:Call|overrides.B.classMethod|0|formal(arg):f2a01ecb9eb94ec06558f106bda300c4"
  }
}
{
  "kind": "issue",
  "data": {
    "callable": "overrides.test_overrides_with_declaration",
    "callable_line": 246,
    "code": 5002,
    "line": 247,
    "start": 15,
    "end": 32,
    "filename": "overrides.py",
    "message": "Data from [Test] source(s) may reach [Test] sink(s)",
    "traces": [
      {
        "name": "forward",
        "roots": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "overrides.BaseWithDeclaration.return_source",
                    "port": "leaf:return"
                  },
                  {
                    "name": "overrides.DerivedWithDeclaration.return_source",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 247, "start": 15, "end": 32 },
            "receiver_interval": [ { "lower": 22, "upper": 25 } ],
            "is_self_call": false
          }
        ]
      },
      {
        "name": "backward",
        "roots": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 247, "start": 15, "end": 32 },
            "call_site": "247:4-247:33"
          }
        ]
      }
    ],
    "features": [ { "always-via": "special_sink" } ],
    "sink_handle": {
      "kind": "Call",
      "callee": "_test_sink",
      "index": 0,
      "parameter": "formal(arg)"
    },
    "master_handle": "overrides.test_overrides_with_declaration:5002:0:Call|_test_sink|0|formal(arg):f53031b332f09b6747ade697c2527eb7"
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.A.__init__",
    "filename": "overrides.py",
    "callable_line": 31,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[r]": 3 },
                "length": 1,
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 32, "start": 35, "end": 38 } ],
            "tito": {
              "caller_interval": [ { "lower": 11, "upper": 12 } ],
              "is_self_call": false
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.A.methodA",
    "filename": "overrides.py",
    "callable_line": 34,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 35, "start": 19, "end": 22 },
            "caller_interval": [ { "lower": 11, "upper": 12 } ],
            "is_self_call": false,
            "call_site": "35:8-35:23"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.AnalyzeAllOverridesChild3.return_source",
    "filename": "overrides.py",
    "callable_line": 202,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 203, "start": 15, "end": 29 },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.B.__init__",
    "filename": "overrides.py",
    "callable_line": 41,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[r]": 3 },
                "length": 1,
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 42, "start": 35, "end": 38 } ],
            "tito": {
              "caller_interval": [ { "lower": 13, "upper": 20 } ],
              "is_self_call": false
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.B.classMethod",
    "filename": "overrides.py",
    "callable_line": 48,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 49, "start": 19, "end": 22 },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false,
            "call_site": "49:8-49:23"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.B.methodB",
    "filename": "overrides.py",
    "callable_line": 44,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 45, "start": 15, "end": 29 },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.Base.__init__",
    "filename": "overrides.py",
    "callable_line": 14,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[r]": 3 },
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.BaseWithDeclaration.return_source",
    "filename": "overrides.py",
    "callable_line": 237,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.C.__init__",
    "filename": "overrides.py",
    "callable_line": 55,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[r]": 3 },
                "length": 2,
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 56, "start": 32, "end": 35 } ],
            "tito": {
              "caller_interval": [ { "lower": 14, "upper": 19 } ],
              "is_self_call": false
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.D.__init__",
    "filename": "overrides.py",
    "callable_line": 67,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "return_paths": { "[r]": 3 },
                "length": 3,
                "kind": "ParameterUpdate[formal(self, position=0)]"
              }
            ],
            "local_features": [ { "always-via": "tito" } ],
            "tito_positions": [ { "line": 68, "start": 32, "end": 35 } ],
            "tito": {
              "caller_interval": [ { "lower": 15, "upper": 18 } ],
              "is_self_call": false
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.D.methodA",
    "filename": "overrides.py",
    "callable_line": 70,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 71, "start": 19, "end": 22 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false,
            "call_site": "71:8-71:23"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.D.methodB",
    "filename": "overrides.py",
    "callable_line": 73,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 74, "start": 15, "end": 29 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.DerivedWithDeclaration.return_source",
    "filename": "overrides.py",
    "callable_line": 242,
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "Test" } ], "declaration": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.ExtendsSkipped.method",
    "filename": "overrides.py",
    "callable_line": 180,
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 181, "start": 19, "end": 22 },
            "caller_interval": [ { "lower": 27, "upper": 28 } ],
            "is_self_call": false,
            "call_site": "181:8-181:23"
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.OverloadedOverride.methodA",
    "filename": "overrides.py",
    "callable_line": 170,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.SkippedOverrides.method",
    "filename": "overrides.py",
    "callable_line": 175,
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ],
    "modes": [ "SkipOverrides" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "overrides.TooManyOverridesChild3.return_source",
    "filename": "overrides.py",
    "callable_line": 228,
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": 229, "start": 15, "end": 29 },
            "caller_interval": [ { "lower": 35, "upper": 36 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.A.methodA}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 11, "upper": 12 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.AnalyzeAllOverrides.return_source}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "modes": [ "AnalyzeAllOverrides" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.AnalyzeAllOverridesChild3.return_source}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 7, "upper": 8 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.B.classMethod}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.B.methodB}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          },
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.Base.classMethod}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.Base.methodA}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 11, "upper": 12 } ],
            "is_self_call": false
          },
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.Base.methodB}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 13, "upper": 20 } ],
            "is_self_call": false
          },
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.BaseWithDeclaration.return_source}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "overrides.BaseWithDeclaration.return_source",
                    "port": "leaf:return"
                  },
                  {
                    "name": "overrides.DerivedWithDeclaration.return_source",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.C.methodA}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.D.methodA}",
    "sinks": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_sink" } ],
                "leaves": [ { "name": "_test_sink", "port": "leaf:arg" } ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ],
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.D.methodB}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "local_features": [ { "always-via": "special_source" } ],
                "leaves": [
                  { "name": "_test_source", "port": "leaf:return" }
                ],
                "kind": "Test"
              }
            ],
            "origin": { "line": -1, "start": -1, "end": -1 },
            "caller_interval": [ { "lower": 15, "upper": 18 } ],
            "is_self_call": false
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.DerivedWithDeclaration.return_source}",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [
                  {
                    "name": "overrides.DerivedWithDeclaration.return_source",
                    "port": "leaf:return"
                  }
                ],
                "kind": "Test"
              }
            ],
            "declaration": null
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "Overrides{overrides.OverloadedOverride.methodA}",
    "tito": [
      {
        "port": "formal(arg, position=1)",
        "taint": [
          {
            "kinds": [ { "return_paths": { "": 4 }, "kind": "LocalReturn" } ],
            "tito": {}
          }
        ]
      }
    ]
  }
}
