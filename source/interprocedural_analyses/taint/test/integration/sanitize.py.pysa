@Sanitize
def sanitize.return_taint_sanitize(arg): ...

def sanitize.source_with_tito(x) -> TaintSource[Test]: ...

@Sanitize(TaintSource)
def sanitize.sanitize_sources(x): ...

@Sanitize(TaintSink)
def sanitize.sanitize_sinks(x): ...

@Sanitize(TaintInTaintOut)
def sanitize.sanitize_tito(x): ...


def sanitize.a_source() -> TaintSource[TestA]: ...
def sanitize.b_source() -> TaintSource[TestB]: ...

@Sanitize(TaintSource[TestA])
def sanitize.sanitize_test_a_source(): ...

@Sanitize(TaintSource[TestB])
def sanitize.sanitize_test_b_source(): ...

@Sanitize(TaintSource[TestA, TestB])
def sanitize.sanitize_a_and_b_source(): ...

def sanitize.a_sink(x: TaintSink[TestA]): ...
def sanitize.b_sink(x: TaintSink[TestB]): ...

@Sanitize(TaintSink[TestA])
def sanitize.sanitize_a_sink(x): ...

@Sanitize(TaintSink[TestB])
def sanitize.sanitize_b_sink(x): ...

@Sanitize(TaintSink[TestA, TestB])
def sanitize.sanitize_a_and_b_sinks(x): ...

@Sanitize(TaintInTaintOut[TaintSource[TestA]])
def sanitize.sanitize_a_source_tito(x): ...

@Sanitize(TaintInTaintOut[TaintSource[TestB]])
def sanitize.sanitize_b_source_tito(x): ...

@Sanitize(TaintInTaintOut[TaintSink[TestA]])
def sanitize.sanitize_a_sink_tito(x): ...

@Sanitize(TaintInTaintOut[TaintSink[TestB]])
def sanitize.sanitize_b_sink_tito(x): ...

@Sanitize(TaintInTaintOut[TaintSource[TestA]])
def sanitize.sanitize_a_source_tito_with_sink(x): ...

@Sanitize(TaintInTaintOut[TaintSink[TestB]])
def sanitize.sanitize_b_sink_tito(x): ...

@Sanitize(TaintSource)
def sanitize.sanitize_with_user_declared_source() -> TaintSource[Test]: ...

@Sanitize(TaintSink)
def sanitize.sanitize_with_user_declared_sink(x: TaintSink[Test]): ...

sanitize.C_sanitized_a_source.attribute: Sanitize[TaintSource[TestA]] = ...
sanitize.C_sanitized_a_source.instance: Sanitize[TaintSource[TestA]] = ...

sanitize.C_sanitized_b_source.attribute: Sanitize[TaintSource[TestB]] = ...
sanitize.C_sanitized_b_source.instance: Sanitize[TaintSource[TestB]] = ...

sanitize.C_sanitized_ab_sources.attribute: Sanitize[TaintSource[TestA, TestB]] = ...
sanitize.C_sanitized_ab_sources.attribute: TaintSource[Test] = ...

sanitize.C_sanitized_ab_sources.instance: Sanitize[TaintSource[TestA, TestB]] = ...
sanitize.C_sanitized_ab_sources.instance: TaintSource[Test] = ...

sanitize.C_sanitized_all_sources.attribute: Sanitize[TaintSource] = ...
sanitize.C_sanitized_all_sources.instance: Sanitize[TaintSource] = ...

sanitize.C_sanitized_a_sink.attribute: Sanitize[TaintSink[TestA]] = ...
sanitize.C_sanitized_a_sink.instance: Sanitize[TaintSink[TestA]] = ...

sanitize.C_sanitized_b_sink.attribute: Sanitize[TaintSink[TestB]] = ...
sanitize.C_sanitized_b_sink.instance: Sanitize[TaintSink[TestB]] = ...

sanitize.C_sanitized_ab_sinks.attribute: Sanitize[TaintSink[TestA, TestB]] = ...
sanitize.C_sanitized_ab_sinks.instance: Sanitize[TaintSink[TestA, TestB]] = ...

sanitize.C_sanitized_all_sinks.attribute: Sanitize[TaintSink] = ...
sanitize.C_sanitized_all_sinks.attribute: TaintSink[Test] = ...

sanitize.C_sanitized_all_sinks.instance: Sanitize[TaintSink] = ...
sanitize.C_sanitized_all_sinks.instance: TaintSink[Test] = ...

# DOCUMENTATION_PARAMETER_SPECIFIC_SANITIZERS_START
def sanitize.sanitize_parameter(x: Sanitize): ...

def sanitize.sanitize_parameter_all_tito(x: Sanitize[TaintInTaintOut]): ...

def sanitize.sanitize_parameter_no_user_controlled(x: Sanitize[TaintSource[UserControlled]]): ...

def sanitize.sanitize_parameter_no_sql(x: Sanitize[TaintSink[SQL]]): ...

def sanitize.sanitize_parameter_no_rce(x: Sanitize[TaintSink[RemoteCodeExecution]]): ...

def sanitize.sanitize_parameter_no_user_controlled_tito(x: Sanitize[TaintInTaintOut[TaintSource[UserControlled]]]): ...

def sanitize.sanitize_parameter_no_sql_tito(x: Sanitize[TaintInTaintOut[TaintSink[SQL]]]): ...
# DOCUMENTATION_PARAMETER_SPECIFIC_SANITIZERS_END

def sanitize.sanitize_parameter_with_user_declared_sink(x: Sanitize[TaintSink[Test]]): ...

def sanitize.sanitize_parameter_with_user_declared_sink(x: TaintSink[Test]): ...

# DOCUMENTATION_RETURN_SANITIZERS_START
def sanitize.sanitize_return() -> Sanitize: ...

def sanitize.sanitize_return_no_user_controlled() -> Sanitize[TaintSource[UserControlled]]: ...

def sanitize.sanitize_return_no_sql() -> Sanitize[TaintSink[SQL]]: ...
# DOCUMENTATION_RETURN_SANITIZERS_END

def sanitize.sanitize_return_no_cookies() -> Sanitize[TaintSource[Cookies]]: ...

def sanitize.sanitize_return_no_user_controlled_cookies() -> Sanitize[TaintSource[UserControlled, Cookies]]: ...

def sanitize.sanitize_return_no_rce() -> Sanitize[TaintSink[RemoteCodeExecution]]: ...

def sanitize.sanitize_return_with_user_declared_source() -> Sanitize[TaintSource[Test]]: ...

def sanitize.sanitize_return_with_user_declared_source() -> TaintSource[Test]: ...

# DOCUMENTATION_PARAMETERS_SANITIZERS_START
@Sanitize(Parameters)
def sanitize.sanitize_all_parameters(): ...

@Sanitize(Parameters[TaintInTaintOut])
def sanitize.sanitize_all_parameters_all_tito(): ...

@Sanitize(Parameters[TaintSource[UserControlled]])
def sanitize.sanitize_all_parameters_no_user_controlled(): ...

@Sanitize(Parameters[TaintSink[SQL]])
def sanitize.sanitize_all_parameters_no_sql(): ...

@Sanitize(Parameters[TaintSink[RemoteCodeExecution]])
def sanitize.sanitize_all_parameters_no_rce(): ...

@Sanitize(Parameters[TaintInTaintOut[TaintSource[UserControlled]]])
def sanitize.sanitize_all_parameters_no_user_controlled_tito(): ...

@Sanitize(Parameters[TaintInTaintOut[TaintSink[SQL]]])
def sanitize.sanitize_all_parameters_no_sql_tito(): ...

@Sanitize(Parameters[TaintInTaintOut[TaintSource[Cookies], TaintSink[SQL]]])
def sanitize.sanitize_all_parameters_no_cookies_sql_tito(): ...
# DOCUMENTATION_PARAMETERS_SANITIZERS_END

@Sanitize(Parameters[TaintSink[Test]])
def sanitize.sanitize_all_parameters_with_user_declared_sink(): ...

def sanitize.sanitize_all_parameters_with_user_declared_sink(x: TaintSink[Test]): ...
