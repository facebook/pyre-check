@generated
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.a_sink",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [ { "kinds": [ { "kind": "TestA" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.a_source",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "TestA" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.b_sink",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [ { "kinds": [ { "kind": "TestB" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.b_source",
    "sources": [
      {
        "port": "result",
        "taint": [ { "kinds": [ { "kind": "TestB" } ], "decl": null } ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.propagation_of_b_sink",
    "sinks": [
      {
        "port": "formal(x)",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "sanitize_obscure.b_sink" } ],
                "kind": "TestB"
              }
            ],
            "local_features": [
              { "always-via": "obscure:model" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 86, "start": 29, "end": 30 } ],
            "root": {
              "filename": "sanitize_obscure.py",
              "line": 87,
              "start": 11,
              "end": 12
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.propagation_of_b_source",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "sanitize_obscure.b_source" } ],
                "kind": "TestB"
              }
            ],
            "local_features": [
              { "always-via": "obscure:model" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 101, "start": 34, "end": 35 } ],
            "root": {
              "filename": "sanitize_obscure.py",
              "line": 100,
              "start": 8,
              "end": 18
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.propagation_of_b_with_sanitize_a_tito",
    "sources": [
      {
        "port": "result",
        "taint": [
          {
            "kinds": [
              {
                "leaves": [ { "name": "sanitize_obscure.b_source" } ],
                "kind": "TestB"
              }
            ],
            "local_features": [
              { "always-via": "obscure:model" },
              { "always-via": "tito" }
            ],
            "tito": [ { "line": 72, "start": 27, "end": 28 } ],
            "root": {
              "filename": "sanitize_obscure.py",
              "line": 71,
              "start": 8,
              "end": 18
            }
          }
        ]
      }
    ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.sanitize_a_sink_tito",
    "global_sanitizer": { "tito_sources": [], "tito_sinks": [ "TestA" ] },
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.sanitize_a_source_tito",
    "global_sanitizer": { "tito_sources": [ "TestA" ], "tito_sinks": [] },
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.sanitize_a_tito",
    "global_sanitizer": { "tito_sources": [ "TestA" ], "tito_sinks": [] },
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.sanitize_all",
    "global_sanitizer": { "sources": "All", "sinks": "All", "tito": "All" },
    "modes": [ "Obscure" ]
  }
}
{
  "kind": "model",
  "data": {
    "callable": "sanitize_obscure.sanitize_tito",
    "global_sanitizer": { "tito": "All" },
    "modes": [ "Obscure" ]
  }
}
