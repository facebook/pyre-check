def via_type_of.return_via_parameter_type(parameter) -> TaintSource[Test, ViaTypeOf[parameter]]: ...

def via_type_of.tito(parameter: TaintInTaintOut[LocalReturn, ViaTypeOf[other]], other): ...

def via_type_of.sink_via_type_of(x: TaintSink[Test, ViaTypeOf[y, WithTag["TheY"]]], y): ...


via_type_of.Test1_C.x: ViaTypeOf = ...
via_type_of.Test1_C.y: ViaTypeOf = ...
via_type_of.Test1_C.z: ViaTypeOf = ...

via_type_of.Test2_C.x: TaintInTaintOut[ViaTypeOf] = ...
via_type_of.Test2_C.y: TaintInTaintOut[ViaTypeOf] = ...
via_type_of.Test2_C.z: TaintInTaintOut[ViaTypeOf] = ...

via_type_of.Test3_C.x: TaintSource[Test, ViaTypeOf] = ...
via_type_of.Test3_C.y: TaintSource[Test, ViaTypeOf] = ...
via_type_of.Test3_C.z: TaintSource[Test, ViaTypeOf] = ...

via_type_of.Test4_C.x: TaintSink[Test, ViaTypeOf] = ...
via_type_of.Test4_C.y: TaintSink[Test, ViaTypeOf] = ...
via_type_of.Test4_C.z: TaintSink[Test, ViaTypeOf] = ...
