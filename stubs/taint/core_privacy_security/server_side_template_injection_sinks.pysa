# SSTI
def jinja2.environment.Template.__new__(cls, source: TaintSink[ServerSideTemplateInjection]): ...
def jinja2.environment.Environment.from_string(self, source: TaintSink[ServerSideTemplateInjection, ViaTypeOf[self]]): ...
def jinja2.environment.Environment.compile_expression(self, source: TaintSink[ServerSideTemplateInjection, ViaTypeOf[self]]): ...

#django.template
def django.template.engine.Engine.from_string(self, source: TaintSink[ServerSideTemplateInjection]): ...
def django.template.base.Template.__init__(self, source: TaintSink[ServerSideTemplateInjection], **kwargs): ...

#mako
def mako.template.Template.__init__(self, text: TaintSink[ServerSideTemplateInjection], **kwargs): ...

#chameleon
def chameleon.template.BaseTemplate.__init__(self, body: TaintSink[ServerSideTemplateInjection], **kwargs): ...

#genshi
def genshi.template.base.Template.__init__(self, source: TaintSink[ServerSideTemplateInjection]): ...

#trender
def trender.trender.TRender.__init__(self, content_or_file: TaintSink[ServerSideTemplateInjection]): ...

#cheetah
def Cheetah.Template.Template.__init__(self, source: TaintSink[ServerSideTemplateInjection]): ...