# wsgiref.util
def wsgiref.util.request_uri(environ) -> TaintSource[UserControlled, UserControlled_Meta, URL]: ...
def wsgiref.util.application_uri(environ) -> TaintSource[UserControlled, UserControlled_Meta, URL]: ...
def wsgiref.util.shift_path_info(environ) -> TaintSource[UserControlled, UserControlled_Meta, URL]: ...

# wsgiref.headers
def wsgiref.headers.Headers.__setitem__(self, name: TaintSink[ResponseHeaderName], val: TaintSink[ResponseHeaderValue]): ...
def wsgiref.headers.Headers.__getitem__(self, name) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
def wsgiref.headers.Headers.get_all(self, name) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
def wsgiref.headers.Headers.get(self, name) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
def wsgiref.headers.Headers.values(self) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
def wsgiref.headers.Headers.items(self) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
def wsgiref.headers.Headers.__bytes__(self) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...
def wsgiref.headers.Headers.setdefault(self, name: TaintSink[ResponseHeaderName], value: TaintSink[ResponseHeaderValue]): ...
def wsgiref.headers.Headers.add_header(self, _name: TaintSink[ResponseHeaderName], _value: TaintSink[ResponseHeaderValue], **_params): ...

# wsgiref.simple_server
def wsgiref.simple_server.WSGIRequestHandler.get_environ(self) -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...

# wsgiref.handlers
def wsgiref.handlers.read_environ() -> TaintSource[UserControlled, UserControlled_Meta, HeaderData]: ...

wsgiref.handlers.BaseHandler.error_headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser]
wsgiref.handlers.BaseHandler.error_body: TaintSink[ReturnedToUser]
def wsgiref.handlers.BaseHandler.start_response(
    self, status: TaintSink[ReturnedToUser], headers: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser]
) -> TaintSource[ResponseData]: ...
def wsgiref.handlers.BaseHandler.write(self, data: TaintSink[ReturnedToUser]): ...
def wsgiref.handlers.BaseHandler.log_exception(self, exc_info: TaintSink[Logging]): ...
def wsgiref.handlers.BaseHandler.error_output(self, environ: TaintSink[ResponseHeaderName, ResponseHeaderValue, ReturnedToUser], start_response) -> TaintSource[ResponseData]: ...

wsgiref.handlers.SimpleHandler.stdin: TaintSource[UserControlled, UserControlled_Payload, HeaderData]
wsgiref.handlers.SimpleHandler.stdout: TaintSink[ReturnedToUser]
wsgiref.handlers.SimpleHandler.stderr: TaintSource[UserControlled, UserControlled_Payload, HeaderData]
def wsgiref.handlers.SimpleHandler.get_stdin(self) -> TaintSource[UserControlled, UserControlled_Payload, HeaderData]: ...
def wsgiref.handlers.SimpleHandler.get_stderr(self) -> TaintSource[UserControlled, UserControlled_Payload, HeaderData]: ...
def wsgiref.handlers.SimpleHandler._write(self, data: TaintSink[ReturnedToUser]): ...
