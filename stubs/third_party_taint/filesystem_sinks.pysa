def PIL.Image.open(fp: TaintSink[FileSystem_ReadWrite], mode): ...
def PIL.Image.Image.save(self, fp: TaintSink[FileSystem_ReadWrite], format, **params): ...

def markdown.core.markdownFromFile(*, input: TaintSink[FileSystem_ReadWrite]): ...
def markdown.core.Markdown.convertFile(self, input: TaintSink[FileSystem_Other], output: TaintSink[FileSystem_Other], encoding): ...

def aiofiles.threadpool.open(file: TaintSink[FileSystem_ReadWrite, ViaValueOf[mode, WithTag["file-open-mode"]]], mode): ...

# fabric module (1.x)
def fabric.operations.get(remote_path: TaintSink[FileSystem_ReadWrite], local_path: TaintSink[FileSystem_ReadWrite]): ...
def fabric.operations.put(local_path: TaintSink[FileSystem_ReadWrite], remote_path: TaintSink[FileSystem_ReadWrite]): ...

# fabric module (2.x)
def fabric.transfer.Transfer.get(remote: TaintSink[FileSystem_ReadWrite], local: TaintSink[FileSystem_ReadWrite]): ...
def fabric.transfer.Transfer.put(local: TaintSink[FileSystem_ReadWrite], remote: TaintSink[FileSystem_ReadWrite]): ...

# fabric2 module (2.x)
def fabric2.transfer.Transfer.get(remote: TaintSink[FileSystem_ReadWrite], local: TaintSink[FileSystem_ReadWrite]): ...
def fabric2.transfer.Transfer.put(local: TaintSink[FileSystem_ReadWrite], remote: TaintSink[FileSystem_ReadWrite]): ...
